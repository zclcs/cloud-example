# docker-compose 环境变量
CLOUD_DEPOSITORY_TAG=latest
CLOUD_DEPOSITORY_URL=/cloud
CLOUD_DEPOSITORY_IP_PORT=192.168.33.10:3000
CLOUD_AGENT_CONFIG=./agent/agent.config:/agent/config/agent.config

LOCAL_HOST_IP=127.0.0.1
LOCAL_IP=192.168.33.10

RUN_MODE=dev

# jvm 环境
# -server -Xms1g -Xmx1g -Xmn512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m
# -Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m
JAVA_OPS_LOG="-XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError "
JAVA_GC_LOG="-Xlog:async -Xlog:gc*=debug:file=/log/gc%t.log:utctime,level,tags:filecount=50,filesize=100M -Xlog:jit+compilation=info:file=/log/jit_compile%t.log:utctime,level,tags:filecount=10,filesize=10M -Xlog:safepoint=debug:file=/log/safepoint%t.log:utctime,level,tags:filecount=10,filesize=10M "
JAVA_OPS_LOG_PLATFORM_GATEWAY="-XX:HeapDumpPath=./log/platform-gateway/java_heapdump.hprof "
JAVA_OPS_LOG_PLATFORM_SYSTEM="-XX:HeapDumpPath=./log/platform-system/java_heapdump.hprof "
JAVA_OPS_LOG_PLATFORM_MAINTENANCE="-XX:HeapDumpPath=./log/platform-maintenance/java_heapdump.hprof "
JAVA_OPS_LOG_TEST_TEST="-XX:HeapDumpPath=./log/test-test/java_heapdump.hprof "
JAVA_OPS_LOG_THIRD_PART_DATABASE_SYNC="-XX:HeapDumpPath=./log/third-part-database-sync/java_heapdump.hprof "
JAVA_OPS_LOG_THIRD_PART_CONFIG_SYNC="-XX:HeapDumpPath=./log/third-part-config-sync/java_heapdump.hprof "
JAVA_OPS_SYSTEM="-Dspring.cloud.nacos.discovery.ip=192.168.33.10 -Ddruid.mysql.usePingMethod=false -Dfile.encoding=UTF-8 -Djava.security.egd=file:/dev/./urandom -Dnetworkaddress.cache.ttl=10 "
JAVA_OPS_MEMORY="-XX:MaxRAMPercentage=45 -XX:InitialRAMPercentage=45 -XX:MinHeapFreeRatio=0 -XX:MaxHeapFreeRatio=100 -XX:+AlwaysPreTouch -Xss512k -XX:MaxDirectMemorySize=1024m -XX:MaxMetaspaceSize=384m -XX:ReservedCodeCacheSize=256m "
JAVA_OPS_GC="-XX:+DisableExplicitGC -XX:+UseZGC "
JAVA_OPS_SAFE_POINT="-XX:-UseBiasedLocking -XX:GuaranteedSafepointInterval=0 -XX:+UseCountedLoopSafepoints -XX:+SafepointTimeout -XX:SafepointTimeoutDelay=1000 "
JAVA_OPS_JFR="-XX:StartFlightRecording=disk=true,maxsize=4096m,maxage=3d -XX:FlightRecorderOptions=maxchunksize=128m "
JAVA_OPS_MODULAR_LIMITATIONS="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.security=ALL-UNNAMED --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/jdk.internal.access=ALL-UNNAMED --add-opens java.base/jdk.internal.misc=ALL-UNNAMED "

### 各服务启动类路径配置
PLATFORM_GATEWAY_MAIN_CLASS=com.zclcs.PlatformGatewayApplication
PLATFORM_SYSTEM_MAIN_CLASS=com.zclcs.PlatformSystemApplication
PLATFORM_MAINTENANCE_MAIN_CLASS=com.zclcs.PlatformMaintenanceApplication
TEST_TEST_MAIN_CLASS=com.zclcs.TestTestApplication
THIRD_PART_DATABASE_SYNC_MAIN_CLASS=com.zclcs.ThirdPartDatabaseSyncApplication
THIRD_PART_CONFIG_SYNC_MAIN_CLASS=com.zclcs.ThirdPartConfigSyncApplication

### docker wait 工具变量
# 重试之间休眠的秒数。 默认值为 1 秒。
DOCKER_WAIT_SLEEP_INTERVAL=1
# 在尝试新连接之前与远程主机的单个 TCP 连接超时。 默认值为 5 秒。
DOCKER_WAIT_HOST_CONNECT_TIMEOUT=10
# 在失败之前等待所有主机/路径可用的最大秒数。 默认值为 30 秒。
DOCKER_WAIT_TIMEOUT=300

### docker healthcheck 变量
# 健康检查的间隔，默认为 30 秒
DOCKER_HEALTHCHECK_INTERVAL=20s
# 健康检查命令运行超时时间，如果超过这个时间，本次健康检查就被视为失败，默认 30 秒
DOCKER_HEALTHCHECK_TIMEOUT=5s
# 当连续失败指定次数后，则将容器状态视为 unhealthy，默认 3 次
DOCKER_HEALTHCHECK_RETRIES=5

### nacos 注册中心
NACOS_NAMESPACE=dev
NACOS_HOST=127.0.0.1
NACOS_PORT=8848
NACOS_GROUP=DEFAULT_GROUP
NACOS_USERNAME=nacos
NACOS_PASSWORD=nacos

### nacos环境变量
MODE=standalone
NACOS_SERVER_PORT=8848
# 这里对应docker-compose中的服务名
NACOS_DB_PARAM=characterEncoding=UTF-8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
NACOS_AUTH_ENABLE=true
NACOS_AUTH_TOKEN_EXPIRE_SECONDS=18000
NACOS_AUTH_CACHE_ENABLE=true
NACOS_AUTH_TOKEN=SecretKey987456123045612378908521479630865412379001234567890123456789

### xxl-job 分布式定时任务
XXL_JOB_HOST=127.0.0.1
XXL_JOB_PORT=8080
XXL_JOB_TOKEN=12382e1c-fafc-4cc8-bb04-d276fd1ca7de
XXL_JOB_ADMIN_USERNAME=admin
XXL_JOB_ADMIN_PASSWORD=123456
XXL_JOB_DB_NAME=third_part_xxl_job

### 数据源mysql实例
DATASOURCE_DB_TYPE=mysql
DATASOURCE_HOST=127.0.0.1
DATASOURCE_PORT=3306
DATASOURCE_USERNAME=root
DATASOURCE_PASSWORD=123456
DATASOURCE_ROOT_USERNAME=root
DATASOURCE_ROOT_PASSWORD=123456
DATASOURCE_DRIVER=com.mysql.cj.jdbc.Driver
DATASOURCE_PARAM=useUnicode=true&characterEncoding=UTF-8&connectTimeout=30000&socketTimeout=3000&autoReconnect=true&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true&serverTimezone=Asia/Shanghai

### 分布式缓存
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_DATABASE=0
REDIS_PASSWORD=123456

### rabbitmq
RABBIT_MQ_HOST=127.0.0.1
RABBIT_MQ_PORT=5672
RABBIT_MQ_API_PORT=15672
RABBIT_MQ_USERNAME=root
RABBIT_MQ_PASSWORD=123456

### 业务模块端口分配
PORT_PLATFORM_GATEWAY=8101
PORT_PLATFORM_SYSTEM=8201
PORT_PLATFORM_MAINTENANCE=8301
PORT_TEST_TEST=9101
PORT_DATA_SYNC=7101
PORT_CONFIG_SYNC=7102

### 日志管理
LOG_CONTROLLER_PARAMS=false
LOG_CONTROLLER_PARAMS_GATEWAY=false
LOG_SQL_ENABLED=true

### minio环境变量
MINIO_ROOT_USER=admin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_PORT=9000
MINIO_HOST=127.0.0.1
MINIO_ENDPOINT=http://127.0.0.1:9000
MINIO_DOMAIN_NAME=

### 上传文件大小限制
NGINX_MAX_FILE_SIZE=1m
MAX_FILE_SIZE=1MB
MAX_REQUEST_SIZE=10MB

### 应用全局配置
## 网关
GATEWAY_HOST=127.0.0.1
## 默认密码
DEFAULT_PASSWORD=123456
