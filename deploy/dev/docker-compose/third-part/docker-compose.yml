version: '3'
# docker network create -d bridge cloud_net 部署前 创建网络群组
services:
  mysql:
    image: mysql:5.7.35
    container_name: mysql-cloud
    network_mode: host
    environment:
      # 设置密码
      MYSQL_ROOT_PASSWORD: ${MYSQL_SERVICE_PASSWORD}
      # 设置时区
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    volumes:
      #挂载 MySQL数据
      - ./mysql/data:/var/lib/mysql
      #挂载 MySQL日志
      - ./mysql/log:/var/log/mysql
      #挂载 MySQL配置文件
      - ./mysql/conf:/etc/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
  redis:
    image: redis:6.0.8
    container_name: redis-cloud
    network_mode: host
    environment:
      # 设置时区
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    command: redis-server /etc/redis/redis.conf --requirepass ${REDIS_PASSWORD} --appendonly no
    volumes:
      - ./redis/data:/data #挂载 Redis数据
      - ./redis/conf/redis.conf:/etc/redis/redis.conf #挂载 Redis配置
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
  nacos:
    image: nacos/nacos-server:v2.2.1
    container_name: nacos-cloud
    network_mode: host
    environment:
      # 设置时区
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
      # TODO 修改JVM调优参数
      JVM_XMS: 128m   #-Xms default :2g
      JVM_XMX: 128m   #-Xmx default :2g
      JVM_XMN: 64m    #-Xmn default :1g
      JVM_MS: 32m     #-XX:MetaspaceSize default :128m
      JVM_MMS: 32m    #-XX:MaxMetaspaceSize default :320m
    volumes:
      - ./nacos/standalone-logs/:/home/nacos/logs
      - ./nacos/init.d/application.properties:/home/nacos/conf/application.properties
    healthcheck:
      test: [ "CMD", "nc", "-vz", "${LOCAL_HOST_IP}", "${NACOS_SERVER_PORT}" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
    depends_on:
      third-part-database-sync:
        condition: service_healthy
  minio:
    image: minio/minio:RELEASE.2021-06-17T00-10-46Z
    container_name: minio
    network_mode: host
    environment:
      # 设置时区
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
      #管理后台用户名
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      #管理后台密码，最小8个字符
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    volumes:
      #映射当前目录下的data目录至容器内/data目录
      - ./minio/data:/data
      #映射配置目录
      - ./minio/config:/root/.minio/
    healthcheck:
      test: [ "CMD-SHELL", "curl -sS 'http://${LOCAL_HOST_IP}:${MINIO_PORT}/minio/index.html' || exit 1" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
    command: server /data
  rabbitmq:
    image: ${CLOUD_DEPOSITORY_IP_PORT}/library/rabbitmq:3.9.13-management
    container_name: rabbitmq
    network_mode: host
    environment:
      # 设置时区
      TZ: Asia/Shanghai
      RABBITMQ_DEFAULT_USER: ${RABBIT_MQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_MQ_PASSWORD}
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/conf:/etc/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
  nginx:
    image: nginx:1.21.3
    container_name: nginx-cloud
    network_mode: host
    environment:
      # 设置时区
      TZ: Asia/Shanghai
    privileged: true
    user: root
    volumes:
      - ../cloud/web:/var/cloud/web
      - ./nginx/:/etc/nginx/
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
  xxl-job:
    image: xuxueli/xxl-job-admin:2.4.0
    container_name: xxl-job
    network_mode: host
    environment:
      # 设置时区
      TZ: Asia/Shanghai
      PARAMS: "--spring.datasource.url=jdbc:mysql://${MYSQL_SERVICE_HOST}:${MYSQL_SERVICE_PORT}/${XXL_JOB_DB_NAME}?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai 
      --spring.datasource.username=${MYSQL_SERVICE_USER} 
      --spring.datasource.password=${MYSQL_SERVICE_PASSWORD} 
      --xxl.job.accessToken=${XXL_JOB_TOKEN}
      --server.port=${XXL_JOB_PORT}"
    volumes:
      - ./xxl-job/log:/data/applogs/xxl-job
    healthcheck:
      test: [ "CMD-SHELL", "curl -sS 'http://${LOCAL_HOST_IP}:${XXL_JOB_PORT}/xxl-job-admin/actuator' || exit 1" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
      retries: 3
    env_file: .env
    depends_on:
      third-part-database-sync:
        condition: service_healthy
  third-part-database-sync:
    image: ${CLOUD_DEPOSITORY_IP_PORT}${CLOUD_DEPOSITORY_URL}/third-part-database-sync:${CLOUD_DEPOSITORY_TAG}
    container_name: third-part-database-sync
    network_mode: host
    command: sh -c "java -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -XX:-OmitStackTraceInFastThrow -XX:HeapDumpPath=./log/data-sync/java_heapdump.hprof -Dcsp.sentinel.app.type=1 -Ddruid.mysql.usePingMethod=false -Dfile.encoding=UTF-8 -Djava.security.egd=file:/dev/./urandom -Dnetworkaddress.cache.ttl=10 -XX:MaxRAMPercentage=45 -XX:InitialRAMPercentage=45 -XX:MinHeapFreeRatio=0 -XX:MaxHeapFreeRatio=100 -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:MaxGCPauseMillis=50 -XX:-UseBiasedLocking -XX:GuaranteedSafepointInterval=0 -XX:+UseCountedLoopSafepoints -XX:+SafepointTimeout -XX:SafepointTimeoutDelay=1000 -XX:StartFlightRecording=disk=true,maxsize=32m,maxage=3d -XX:FlightRecorderOptions=maxchunksize=32m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.security=ALL-UNNAMED --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/jdk.internal.access=ALL-UNNAMED --add-opens java.base/jdk.internal.misc=ALL-UNNAMED -cp /app/resources:/app/classes:/app/libs/* com.zclcs.ThirdPartDatabaseSyncApplication"
    volumes:
      - ./third-part-database-sync/log:/log/third-part-database-sync
    healthcheck:
      test: [ "CMD-SHELL", "curl -sS ${LOCAL_HOST_IP}:${PORT_DATA_SYNC} || exit 1" ]
      interval: ${DOCKER_HEALTHCHECK_INTERVAL}
      timeout: ${DOCKER_HEALTHCHECK_TIMEOUT}
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
    env_file: .env
    depends_on:
      mysql:
        condition: service_healthy